{"version":3,"file":"netrol.min.js","sources":["../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../src/core/createError.ts","../node_modules/@babel/runtime/helpers/typeof.js","../src/helpers/index.ts","../src/core/catcher.ts","../src/core/progress/listener.ts","../src/core/progress/toListening.ts","../src/core/requestPool.ts","../src/core/AdaptersHook.ts","../src/core/createResponseData.ts","../src/core/dispatchRequest.ts","../src/adapters/index.ts","../src/core/interceptor.ts","../src/core/Netrol.ts","../src/create.ts","../src/interceptor.ts","../src/progressListener.ts","../src/cancel.ts","../src/timeoutHander.ts","../src/toCatch.ts"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","/* eslint-disable no-unused-vars */\r\n// 错误类型的枚举\r\nenum ErrorType {\r\n  STOP = 0, // promise链终止，为了不执行 then 方法中或者 await 后的程序\r\n  FAIL = 1, // 一般错误\r\n  THROTTLE = 2, // 触发节流\r\n  STATUS = 3, // 服务器状态码错误\r\n  TIMEOUT = 4, // 超时错误\r\n  CANCELED = 5, // 请求已被取消\r\n}\r\n\r\n/**\r\n * 生成一个错误\r\n * @param message 错误信息\r\n * @param type 错误类型\r\n * @param isPromise 是否返回 promise.reject\r\n * @param extra 扩展对象，用于特殊处理\r\n */\r\nfunction createError (\r\n  message: string,\r\n  type: ErrorType,\r\n  isPromise: boolean = false,\r\n  extra?: Record<string, any>\r\n): Promise<Error> | Error {\r\n  // 创建一个错误\r\n  const error: any = new Error(message)\r\n\r\n  // 扩展 error 的属性\r\n  // 当前的错误类型\r\n  error.type = type\r\n  // 错误类型的值\r\n  error.ErrorType = {\r\n    STOP: ErrorType.STOP,\r\n    FAIL: ErrorType.FAIL,\r\n    THROTTLE: ErrorType.THROTTLE,\r\n    STATUS: ErrorType.STATUS,\r\n    TIMEOUT: ErrorType.TIMEOUT,\r\n    CANCELED: ErrorType.CANCELED\r\n  }\r\n\r\n  // 状态码错误， 需要见状态码挂载到错误对象上\r\n  if (type === ErrorType.STATUS) {\r\n    error.statusCode = extra.code\r\n  }\r\n\r\n  // 转 JSON 的方法\r\n  error.toJSON = function () {\r\n    const result: Record<string, any> = {\r\n      type: this.type,\r\n      message,\r\n      ErrorType: this.ErrorType\r\n    }\r\n    if (this.statusCode !== undefined) {\r\n      result.statusCode = this.statusCode\r\n    }\r\n    return result\r\n  }\r\n\r\n  if (isPromise) {\r\n    return Promise.reject(error)\r\n  }\r\n\r\n  return error\r\n}\r\n\r\n// 导出函数\r\nexport default createError\r\n\r\n// 导出错误类型\r\nexport { ErrorType }\r\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/* global\r\n    FormData\r\n    ArrayBuffer\r\n    Function\r\n    File\r\n    Blob\r\n*/\r\n/**\r\n * 深复制对象\r\n * @param obj 要复制的对象\r\n * @return 一个新的对象\r\n */\r\nexport function deepCopy (obj: Object): object {\r\n  return JSON.parse(JSON.stringify(obj))\r\n}\r\n\r\n/**\r\n * 判断是否为对象\r\n * @param value 要判断的对象\r\n */\r\nexport function isObject (value): boolean {\r\n  return value !== null && typeof value === 'object'\r\n}\r\n\r\n/**\r\n * 判断是否为函数\r\n * @param value\r\n */\r\nexport function isFunction (value): boolean {\r\n  return value && value instanceof Function\r\n}\r\n/**\r\n * 判断是否为 Formdata 对象\r\n * @param value 要判断的对象\r\n */\r\nexport function isFormData (value): boolean {\r\n  return FormData && (value instanceof FormData)\r\n}\r\n\r\n/**\r\n * 判断 ArrayBuffer 对象\r\n * @param value 要判断的对象\r\n */\r\nexport function isArrayBuffer (value): boolean {\r\n  return ArrayBuffer && (value instanceof ArrayBuffer)\r\n}\r\n\r\n/**\r\n * 判断是否为 Stream\r\n * @param value 要判断的对象\r\n */\r\nexport function isStream (value): boolean {\r\n  return isObject(value) && isFunction(value.pipe)\r\n}\r\n\r\n/**\r\n * 判断是否为 文件\r\n * @param value\r\n */\r\nexport function isFile (value) {\r\n  return isObject(value) && value instanceof File\r\n}\r\n\r\n/**\r\n * 判断是否为 Blob 对象\r\n * @param value\r\n */\r\nexport function isBlob (value) {\r\n  return isObject(value) && value instanceof Blob\r\n}\r\n\r\n/**\r\n * 判断属性是否为目标对象自有属性\r\n * @param target 目标对象\r\n * @param prop 判断的属相\r\n */\r\nexport function isOwnProp (target: Record<string, any>, prop: any) {\r\n  return Object.prototype.hasOwnProperty.call(target, prop)\r\n}\r\n\r\n/**\r\n * 往url上添加查询参数\r\n * @param url 要添加的url\r\n * @param query 参数对象\r\n */\r\nexport function appendQueryToUrl (url: string, query: Record<string, any>): string {\r\n  // 判断 url 上是否已经包含响应的参数\r\n  if (url.includes('?')) {\r\n    Object.entries(query).forEach(([key, val]) => {\r\n      url += `&${key}=${val}`\r\n    })\r\n  } else {\r\n    Object.entries(query).forEach(([key, val], i) => {\r\n      if (i === 0) {\r\n        url += `?${key}=${val}`\r\n      } else {\r\n        url += `&${key}=${val}`\r\n      }\r\n    })\r\n  }\r\n  return url\r\n}\r\n","import createError, { ErrorType } from './createError'\r\nimport { isOwnProp } from '../helpers'\r\n/**\r\n * 超时/状态异常捕获器\r\n */\r\nclass Catcher {\r\n  targets: Record<number, Function> = {}\r\n  timeoutHander: Function // 超时处理函数\r\n  /**\r\n   * 捕获状态码\r\n   * @param code 要捕获的状态码\r\n   * @param exec 执行函数\r\n   */\r\n  catch (code: number | string, exec: Function) {\r\n    code = Number(code)\r\n    if (!isOwnProp(this.targets, code)) {\r\n      this.targets[code] = exec\r\n    } else {\r\n      throw createError(`The catcher of status code ${code} already exists`, ErrorType.FAIL)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 触发事件\r\n   * @param code 可能触发捕获函数的状态码\r\n   */\r\n  trigger (code: number | string) {\r\n    code = Number(code)\r\n    if (isOwnProp(this.targets, code)) {\r\n      this.targets[code]()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 注册超时处理函数\r\n   */\r\n  registerTimeoutHander (hander: Function) {\r\n    this.timeoutHander = hander\r\n  }\r\n}\r\n\r\nexport default new Catcher()\r\n","import createError, { ErrorType } from '../createError'\r\nimport { isFunction, isOwnProp } from '../../helpers'\r\n\r\n/**\r\n * 进度监听器\r\n */\r\n\r\nclass ProgressListener {\r\n  upload: Record<string, Function> = {}\r\n  download: Record<string, Function> = {}\r\n\r\n  /**\r\n   * 添加监听器\r\n   * @param type 监听的类型，upload/download\r\n   * @param name 监听的 apiname\r\n   * @param exec 执行方法\r\n   */\r\n  add (type: string, name: string, exec: Function) {\r\n    if (!isOwnProp(this[type], name)) {\r\n      this[type][name] = exec\r\n    } else {\r\n      throw createError(`The listener ${name} already exists`, ErrorType.FAIL)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 触发监听器\r\n   * @param type 监听的类型，upload/download\r\n   * @param name 监听的 apiname\r\n   */\r\n  trigger (type: string, name: string, progressEvent: Record<string, any>) {\r\n    isFunction(this[type][name]) && this[type][name](progressEvent)\r\n  }\r\n\r\n  /**\r\n   * 判断存在\r\n   * @param type 监听的类型，upload/download\r\n   * @param name 监听的 apiname\r\n   */\r\n  isExist (type: string, name: string): boolean {\r\n    if (isOwnProp(this[type], name)) return true\r\n    return false\r\n  }\r\n}\r\n\r\nexport const progressListener = new ProgressListener()\r\n","/* global  XMLHttpRequest */\r\n/* eslint-disable no-unused-vars */\r\n// 引入 进度监听者\r\nimport { progressListener } from './listener'\r\n\r\n/**\r\n * 绑定 xhr 一系列上传/下载事件\r\n * @param type upload/download\r\n * @param xhr xhr对象\r\n */\r\nexport function toListening (type: string, apiName: string, xhr: XMLHttpRequest) {\r\n  // 获取上传/下载对象\r\n  let target = type === 'upload' ? xhr.upload : xhr\r\n  xhr = null // 回收 xhr 内存\r\n\r\n  // 进度状态\r\n  enum ProgressStatus {\r\n    FAIL = 0,\r\n    SUCCESS = 1,\r\n    PROGRESS = 2,\r\n    START = 3,\r\n    CANCEL = 4,\r\n    TIMEOUT = 5\r\n  }\r\n\r\n  // 事件处理函数\r\n  // 开始\r\n  function onStart (evt) {\r\n    progressListener.trigger(type, apiName, {\r\n      type,\r\n      event: evt,\r\n      status: ProgressStatus.START,\r\n      statusText: 'start',\r\n      ProgressStatus: ProgressStatus\r\n    })\r\n  }\r\n  // 进度\r\n  function onProgress (evt) {\r\n    progressListener.trigger(type, apiName, {\r\n      type,\r\n      event: evt,\r\n      status: ProgressStatus.PROGRESS,\r\n      statusText: 'progress',\r\n      ProgressStatus: ProgressStatus,\r\n      total: evt.total,\r\n      loaded: evt.loaded\r\n    })\r\n  }\r\n  // 取消\r\n  function onCancel (evt) {\r\n    progressListener.trigger(type, apiName, {\r\n      type,\r\n      event: evt,\r\n      status: ProgressStatus.CANCEL,\r\n      statusText: 'cancel',\r\n      ProgressStatus: ProgressStatus\r\n    })\r\n  }\r\n  // 失败\r\n  function onFail (evt) {\r\n    progressListener.trigger(type, apiName, {\r\n      type,\r\n      event: evt,\r\n      status: ProgressStatus.FAIL,\r\n      statusText: 'fail',\r\n      ProgressStatus: ProgressStatus\r\n    })\r\n  }\r\n  // 成功\r\n  function onSuccess (evt) {\r\n    progressListener.trigger(type, apiName, {\r\n      type,\r\n      event: evt,\r\n      status: ProgressStatus.SUCCESS,\r\n      statusText: 'success',\r\n      ProgressStatus: ProgressStatus\r\n    })\r\n  }\r\n  // 超时\r\n  function onTimeout (evt) {\r\n    progressListener.trigger(type, apiName, {\r\n      type,\r\n      event: evt,\r\n      status: ProgressStatus.TIMEOUT,\r\n      statusText: 'timeout',\r\n      ProgressStatus: ProgressStatus\r\n    })\r\n  }\r\n\r\n  // 请求结束\r\n  function onLoadend () {\r\n    unbind()\r\n  }\r\n\r\n  // 绑定事件\r\n  target.addEventListener('loadstart', onStart)\r\n  target.addEventListener('progress', onProgress)\r\n  target.addEventListener('abort', onCancel)\r\n  target.addEventListener('error', onFail)\r\n  target.addEventListener('load', onSuccess)\r\n  target.addEventListener('timeout', onTimeout)\r\n  target.addEventListener('loadend', onLoadend)\r\n\r\n  // 解绑事件\r\n  function unbind () {\r\n    target.removeEventListener('loadstart', onStart)\r\n    target.removeEventListener('progress', onProgress)\r\n    target.removeEventListener('abort', onCancel)\r\n    target.removeEventListener('error', onFail)\r\n    target.removeEventListener('load', onSuccess)\r\n    target.removeEventListener('timeout', onTimeout)\r\n    target.removeEventListener('loadend', onLoadend)\r\n    target = null\r\n  }\r\n}\r\n","/* global  XMLHttpRequest */\r\n/**\r\n * 请求池，用于保留当前正在执行的请求\r\n */\r\n\r\nclass RequestPool {\r\n  xhrPools: Record<string, XMLHttpRequest> = {}\r\n\r\n  /**\r\n   * 判断请求是否存在\r\n   * @param name 请求的 apiname\r\n   */\r\n  isExist (name: string): boolean {\r\n    if (this.xhrPools[name]) return true\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 执行取消请求\r\n   * @param name 接口名\r\n   */\r\n  cancel (name: string) {\r\n    if (!this.xhrPools[name]) return false\r\n    this.xhrPools[name].abort()\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * 将请求名添加到 xhrPools 中\r\n   * @param name 请求的 apiname\r\n   * @param xhr xhr 对象\r\n   */\r\n  add (name: string, xhr: XMLHttpRequest) {\r\n    if (this.xhrPools[name]) return\r\n    this.xhrPools[name] = xhr\r\n  }\r\n\r\n  /**\r\n   * 删除对应 apiname\r\n   * @param name 请求的 apiname\r\n   */\r\n  remove (name: string) {\r\n    if (!this.xhrPools[name]) return\r\n    delete this.xhrPools[name]\r\n  }\r\n}\r\n\r\nexport const requestPool = new RequestPool()\r\n","import { AdaptersRequest } from '../types/adapters'\r\nimport catcher from './catcher'\r\nimport createError, { ErrorType } from './createError'\r\n/* global  XMLHttpRequest */\r\nimport { createResponseData } from './createResponseData'\r\nimport { progressListener } from './progress/listener'\r\nimport { toListening } from './progress/toListening'\r\nimport { requestPool } from './requestPool'\r\n/**\r\n * 适配器钩子对象\r\n */\r\n\r\nexport class AdaptersHook {\r\n  xhr = null\r\n  resolve = null\r\n  reject = null\r\n  requestConfig = null\r\n\r\n  constructor (config: AdaptersRequest, resolve: Function, reject: Function) {\r\n    this.requestConfig = config\r\n    this.resolve = resolve\r\n    this.reject = reject\r\n  }\r\n\r\n  // 接口发起请求，接收并保存 xhr 对象\r\n  start (xhr: XMLHttpRequest) {\r\n    const name = this.requestConfig.name\r\n\r\n    requestPool.add(name, xhr)\r\n\r\n    // 判断当前 apiName 是否存在进度监听器，存在则进行监听\r\n    if (progressListener.isExist('upload', name)) {\r\n      toListening('upload', name, xhr)\r\n    }\r\n    if (progressListener.isExist('download', name)) {\r\n      toListening('download', name, xhr)\r\n    }\r\n\r\n    this.xhr = xhr\r\n  }\r\n\r\n  // 请求成功有了结果\r\n  success () {\r\n    requestPool.remove(this.requestConfig.name)\r\n    const response = createResponseData(this.xhr)\r\n    if (response.status >= 200 && response.status < 300) return this.resolve(response)\r\n    // 触发对应的状态捕获器，根据返回结果，判断是否存在状态捕获器，并响应不同提醒\r\n    const result = catcher.trigger(response.status)\r\n    if (result) {\r\n      this.reject(\r\n        createError(`Not an error; promise stop; https status ${response.status} be catched`, ErrorType.STOP)\r\n      )\r\n    } else {\r\n      this.reject(\r\n        createError(`request failed with status code ${response.status}`, ErrorType.STATUS, false, { code: response.status })\r\n      )\r\n    }\r\n  }\r\n\r\n  // 接口超时\r\n  timeout () {\r\n    const { name, method, url, timeout, data } = this.requestConfig\r\n    requestPool.remove(name)\r\n    // 触发超时处理器，并传递接口信息\r\n    catcher.timeoutHander && catcher.timeoutHander({\r\n      apiName: name,\r\n      method,\r\n      url,\r\n      timeout,\r\n      data\r\n    })\r\n    this.reject(\r\n      createError(`timeout of ${timeout} ms exceeded`, ErrorType.TIMEOUT)\r\n    )\r\n  }\r\n\r\n  // 发生错误\r\n  error () {\r\n    requestPool.remove(this.requestConfig.name)\r\n    this.reject(\r\n      createError('Network Error', ErrorType.FAIL)\r\n    )\r\n  }\r\n\r\n  // 请求被取消\r\n  abort () {\r\n    requestPool.remove(this.requestConfig.name)\r\n    this.reject(\r\n      createError('Request cancelled', ErrorType.CANCELED)\r\n    )\r\n  }\r\n}\r\n","/* global  XMLHttpRequest */\r\nimport { ResponseData } from '../types/responseData'\r\n\r\n/**\r\n * 生成响应数据\r\n */\r\nexport function createResponseData (xhr: XMLHttpRequest): ResponseData {\r\n  let data = !xhr.responseType || xhr.responseType === 'text' ? xhr.responseText : xhr.response\r\n  // 将字符串响应数据，转换为 JSON\r\n  if (typeof data === 'string') {\r\n    try {\r\n      data = JSON.parse(data)\r\n    } catch (e) { /* Ignore */ }\r\n  }\r\n\r\n  return {\r\n    body: data,\r\n    xhr,\r\n    status: xhr.status,\r\n    statusText: xhr.statusText\r\n  }\r\n}\r\n","import adapters from '../adapters/index'\r\nimport { AdaptersRequest } from '../types/adapters'\r\nimport { ResponseData } from '../types/responseData'\r\nimport { AdaptersHook } from './AdaptersHook'\r\nimport createError, { ErrorType } from './createError'\r\nimport { requestPool } from './requestPool'\r\n\r\n// 默认请求头\r\nconst defaultHeaders = {\r\n  'Content-Type': 'application/json;charset=utf-8',\r\n  Accept: 'application/json, text/plain, */*'\r\n}\r\n\r\nexport function dispatchRequest (config: AdaptersRequest): Promise<Error | ResponseData> {\r\n  config.headers = {\r\n    ...defaultHeaders,\r\n    ...config.headers\r\n  }\r\n\r\n  // 节流处理，同一时间不可对同一接口进行两次请求\r\n  const isExist = requestPool.isExist(config.name)\r\n  if (isExist) return createError('Not an error; Triggered throttle;', ErrorType.THROTTLE, true) as Promise<Error>\r\n\r\n  return new Promise((resolve, reject) => {\r\n    // 生成钩子实例\r\n    const adaptersHook = new AdaptersHook(config, res => resolve(res), err => reject(err))\r\n    // 调用适配器\r\n    adapters(config, adaptersHook)\r\n  })\r\n}\r\n","/* global  XMLHttpRequest */\r\nimport { AdaptersRequest, AdaptersHook } from '../types/adapters'\r\nimport { isFormData } from '../helpers/index'\r\n\r\nexport default function (config: AdaptersRequest, hook: AdaptersHook) {\r\n  // 解构请求配置项\r\n  let { headers, method, url, data, timeout } = config\r\n\r\n  let xhr = new XMLHttpRequest()\r\n\r\n  xhr.open(method, url, true)\r\n\r\n  // 如果传给后端的数据为 FormData 格式，则移除 content-type，让浏览器自己设置\r\n  if (data && isFormData(data)) {\r\n    delete headers['Content-Type']\r\n  }\r\n\r\n  // 设置请求头\r\n  Object.entries(headers).forEach(([key, val]) => {\r\n    xhr.setRequestHeader(key, val as string)\r\n  })\r\n\r\n  // 设置超时\r\n  xhr.timeout = timeout\r\n\r\n  // 请求状态变化\r\n  xhr.onreadystatechange = function () {\r\n    if (!xhr || xhr.readyState !== XMLHttpRequest.DONE) return\r\n    if (xhr.status === 0 && !(xhr.responseURL && xhr.responseURL.indexOf('file:') === 0)) return\r\n\r\n    hook.success()\r\n    xhr = null\r\n  }\r\n\r\n  // 超时处理\r\n  xhr.ontimeout = function () {\r\n    hook.timeout()\r\n    xhr = null\r\n  }\r\n\r\n  // 请求报错\r\n  xhr.onerror = function () {\r\n    hook.error()\r\n    xhr = null\r\n  }\r\n\r\n  // 请求被取消\r\n  xhr.onabort = function () {\r\n    hook.abort()\r\n    xhr = null\r\n  }\r\n\r\n  // data 为空，则置为 null\r\n  if (!data) {\r\n    data = null\r\n  }\r\n\r\n  hook.start(xhr)\r\n\r\n  xhr.send(data)\r\n}\r\n","import { InterceptorRequest, InterceptorResponse } from '../types/interceptor'\r\n\r\nclass Interceptor {\r\n  request: InterceptorRequest[] = []\r\n  response: InterceptorResponse[] = []\r\n\r\n  req (inter: InterceptorRequest) {\r\n    this.request.push(inter)\r\n  }\r\n\r\n  res (inter: InterceptorResponse) {\r\n    this.response.push(inter)\r\n  }\r\n}\r\n\r\nexport const interceptor = new Interceptor()\r\n","import { NetrolOptions, NetrolApis, OptionsApi, NetrolApi, Config } from '../types/netrol'\r\nimport { AdaptersRequest } from '../types/adapters'\r\nimport { appendQueryToUrl, isArrayBuffer, isBlob, isFile, isFormData, isObject, isStream } from '../helpers/index'\r\nimport createError, { ErrorType } from './createError'\r\nimport { dispatchRequest } from './dispatchRequest'\r\nimport { interceptor } from './interceptor'\r\n\r\nexport class Netrol {\r\n  apis: NetrolApis = {}\r\n\r\n  constructor (options: NetrolOptions) {\r\n    this.parseOption(options)\r\n  }\r\n\r\n  // 解析构造函数选项\r\n  private parseOption (options: NetrolOptions, moduleName?: string, mainConfig?: Config) {\r\n    const { apis, leach, module, config = {} } = options\r\n    const { defaultMethod, baseUrl, timeout, headers } = config\r\n\r\n    // 检查 apis 是否存在\r\n    if (!apis) throw createError('apis is required in constructor', ErrorType.FAIL)\r\n\r\n    // 遍历 生成 apis\r\n    Object.keys(apis).forEach(key => {\r\n      const value = apis[key]\r\n\r\n      const api: NetrolApi = this.createApi(\r\n        value,\r\n        baseUrl || mainConfig?.baseUrl,\r\n        defaultMethod || mainConfig?.defaultMethod || 'get'\r\n      )\r\n\r\n      api.headers = {\r\n        ...mainConfig?.headers,\r\n        ...headers\r\n      }\r\n\r\n      api.timeout = timeout || mainConfig?.timeout || 0\r\n      if (timeout === 0) api.timeout = 0 // 如何是0，那还是赋0值\r\n\r\n      // 判断是否存在过滤器\r\n      if (leach && leach[key]) {\r\n        api.leach = leach[key]\r\n      }\r\n\r\n      // 添加到 apis 上\r\n      this.apis[moduleName ? `${moduleName}.${key}` : key] = api\r\n    })\r\n\r\n    if (!module) return\r\n    // 处理模块\r\n    Object.keys(module).forEach(key => {\r\n      this.parseOption(module[key], key, config)\r\n    })\r\n  }\r\n\r\n  private createApi (api: OptionsApi | string, baseUrl: string, defaultMethod: string): NetrolApi {\r\n    let netrolApi: NetrolApi\r\n    if (isObject(api)) {\r\n      netrolApi = {\r\n        url: `${baseUrl}${(api as OptionsApi).url}`,\r\n        method: (api as OptionsApi).method.toLowerCase()\r\n      }\r\n    } else {\r\n      netrolApi = {\r\n        url: `${baseUrl}${api as string}`,\r\n        method: defaultMethod.toLowerCase()\r\n      }\r\n    }\r\n    return netrolApi\r\n  }\r\n\r\n  // 发起请求\r\n  request (name: string, data?: any): Promise<any> {\r\n    const api = this.apis[name]\r\n    // 判断对应 name 的 api 是否存在\r\n    if (!api) return createError(`api ${name} is not exist`, ErrorType.FAIL, true) as Promise<Error>\r\n    // 定义请求配置\r\n    const config = {\r\n      name,\r\n      data,\r\n      headers: api.headers,\r\n      method: api.method,\r\n      url: api.url,\r\n      timeout: api.timeout\r\n    }\r\n\r\n    // 请求为get请求，且存在data\r\n    if (config.data && config.method === 'get') {\r\n      // 将data存放到url上\r\n      config.url = appendQueryToUrl(config.url, data)\r\n      config.data = null\r\n    }\r\n\r\n    // promise 链数组\r\n    const chain: Array<any> = [this.transformData, dispatchRequest]\r\n\r\n    // 将拦截器添加到promise链上\r\n    interceptor.request.forEach(inter => {\r\n      chain.unshift(inter)\r\n    })\r\n    interceptor.response.forEach(inter => {\r\n      chain.push((res) => {\r\n        return inter(res, this.stop)\r\n      })\r\n    })\r\n\r\n    // 添加过滤器\r\n    if (api.leach) {\r\n      chain.push((res) => {\r\n        return api.leach(res, this.stop)\r\n      })\r\n    }\r\n\r\n    // 串连promise链\r\n    let promise = Promise.resolve(config)\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift())\r\n    }\r\n    return promise\r\n  }\r\n\r\n  // 终止promise的函数\r\n  stop (): Promise<Error> {\r\n    return createError('Not an error; promise stop;', ErrorType.STOP, true) as Promise<Error>\r\n  }\r\n\r\n  /**\r\n   * 转换请求数据, 作为请求拦截器的一环\r\n   * @param data\r\n   */\r\n  transformData (config: AdaptersRequest) {\r\n    const data = config.data\r\n    if (typeof data === 'string') return Promise.resolve(config)\r\n    // 特殊对象，直接返回\r\n    if (\r\n      isFormData(data) ||\r\n      isArrayBuffer(data) ||\r\n      isStream(data) ||\r\n      isFile(data) ||\r\n      isBlob(data)\r\n    ) {\r\n      return Promise.resolve(config)\r\n    }\r\n\r\n    // 普通对象，转为 JSON 字符串\r\n    if (isObject(data)) {\r\n      return Promise.resolve({\r\n        ...config,\r\n        data: JSON.stringify(data)\r\n      })\r\n    }\r\n\r\n    // 未知情况，直接返回\r\n    return Promise.resolve(config)\r\n  }\r\n}\r\n","import { Netrol } from './core/Netrol'\r\nimport { NetrolOptions } from './types/netrol'\r\n\r\n/**\r\n * 生成 netrol 实例并返回请求方法的函数\r\n */\r\nlet netrol: Netrol = null\r\nexport function create (options: NetrolOptions) {\r\n  if (netrol) return console.warn('netrol instance is only')\r\n  netrol = new Netrol(options)\r\n\r\n  return (name: string, data?: any) => {\r\n    return netrol.request(name, data)\r\n  }\r\n}\r\n","import { interceptor as intercept } from './core/interceptor'\r\nimport { InterceptorRequest, InterceptorResponse } from './types/interceptor'\r\n\r\nexport const interceptor = {\r\n  request (inter: InterceptorRequest) {\r\n    intercept.req(inter)\r\n    return this\r\n  },\r\n  response (inter: InterceptorResponse) {\r\n    intercept.res(inter)\r\n    return this\r\n  }\r\n}\r\n","import { progressListener as listener } from './core/progress/listener'\r\n\r\n/**\r\n * 添加进度监听器\r\n */\r\nexport const progressListener = {\r\n  upload (apiName: string, exec: (progressEvent: Record<string, any>) => void) {\r\n    listener.add('upload', apiName, exec)\r\n  },\r\n  download (apiName: string, exec: (progressEvent: Record<string, any>) => void) {\r\n    listener.add('download', apiName, exec)\r\n  }\r\n}\r\n","import { requestPool } from './core/requestPool'\r\n/**\r\n * 取消一个请求\r\n */\r\nexport function cancel (name: string): boolean {\r\n  return requestPool.cancel(name)\r\n}\r\n","import catcher from './core/catcher'\r\nimport createError, { ErrorType } from './core/createError'\r\n/**\r\n * 注册超时处理函数\r\n */\r\n\r\nexport function timeoutHander (hander: Function) {\r\n  if (!catcher.timeoutHander) {\r\n    catcher.registerTimeoutHander(hander)\r\n  } else {\r\n    throw createError('timeoutHander already exists', ErrorType.FAIL)\r\n  }\r\n}\r\n","import catcher from './core/catcher'\r\n/**\r\n * 对外暴露捕获方法\r\n * @param code 状态码\r\n * @param exec 执行函数\r\n */\r\nexport function toCatch (code: number, exec: Function) {\r\n  catcher.catch(code, exec)\r\n}\r\n"],"names":["obj","key","value","Object","defineProperty","enumerable","configurable","writable","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","protoProps","staticProps","prototype","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","len","arr2","o","minLen","arrayLikeToArray","n","toString","call","slice","constructor","name","from","test","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","ErrorType","_typeof","module","isObject","isFunction","Function","isFormData","FormData","isOwnProp","prop","hasOwnProperty","createError","message","type","isPromise","extra","error","Error","STOP","FAIL","THROTTLE","STATUS","TIMEOUT","CANCELED","statusCode","code","toJSON","result","this","Promise","reject","exec","Number","targets","hander","timeoutHander","progressListener","progressEvent","toListening","apiName","xhr","ProgressStatus","upload","onStart","evt","trigger","event","status","START","statusText","onProgress","PROGRESS","total","loaded","onCancel","CANCEL","onFail","onSuccess","SUCCESS","onTimeout","onLoadend","removeEventListener","addEventListener","requestPool","xhrPools","abort","AdaptersHook","config","resolve","requestConfig","add","isExist","remove","response","data","responseType","responseText","JSON","parse","e","body","createResponseData","catcher","method","url","timeout","defaultHeaders","Accept","dispatchRequest","headers","adaptersHook","res","hook","XMLHttpRequest","open","entries","forEach","val","setRequestHeader","onreadystatechange","readyState","DONE","responseURL","indexOf","success","ontimeout","onerror","onabort","start","send","adapters","interceptor","inter","request","Netrol","options","parseOption","moduleName","mainConfig","apis","leach","defaultMethod","baseUrl","keys","api","_this","createApi","toLowerCase","query","includes","chain","transformData","unshift","_this2","stop","promise","then","shift","ArrayBuffer","pipe","isStream","File","isFile","Blob","isBlob","stringify","netrol","intercept","req","listener","download","cancel","console","warn","registerTimeoutHander"],"mappings":"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"}